version: "3.7"

services:
  pg:
    image: postgres:13.5-alpine
    restart: always
    environment:
      - POSTGRES_DB=${DB_DATABASE}
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - "127.0.0.1:5432:5432"

  app:
    image: ukraine-sponsor-resettlement
    pull_policy: never
    depends_on:
      - pg
      - redis
      - sidekiq
      - s3
    environment:
      # Rails will use existing .env.development file
      RAILS_ENV: development
    ports:
      - "127.0.0.1:8080:8080"
    command: >
      sh -c "RAILS_ENV=${RAILS_ENV} rm -f /app/tmp/pids/server.pid &&
             bundle exec rake db:migrate &&
             bundle exec rails s -e ${RAILS_ENV} -p 8080 --binding=0.0.0.0"

  test:
    image: ukraine-sponsor-resettlement
    pull_policy: never
    depends_on:
      - pg
      - redis
      - sidekiq
      - s3
    profiles: ["test"]
    environment:
      # Rails will use existing .env.test file
      RAILS_ENV: test
    command: bin/test.sh

  sidekiq:
    build: .
    image: ukraine-sponsor-resettlement
    pull_policy: never
    depends_on:
      - pg
      - redis
      - mock-api
    environment:
      # Rails will use existing .env.development file
      RAILS_ENV: development
    command: bundle exec sidekiq

  redis:
    image: redis

  s3:
    image: localstack/localstack:s3-latest
    container_name: localstack-s3
    environment:
      - PERSISTENCE=1
    ports:
      - "127.0.0.1:4566:4566"
    volumes:
      - "./bin/init-s3-localstack.py:/etc/localstack/init/ready.d/init-s3.py"

  mock-api:
    build: http-mock-server
    ports:
      - "127.0.0.1:8081:8081"
